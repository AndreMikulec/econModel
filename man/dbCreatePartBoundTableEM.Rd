% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AmerAssocIndividInvestorsAAII.R
\name{dbCreatePartBoundTableEM}
\alias{dbCreatePartBoundTableEM}
\title{Create a PostgreSQL Partitioned and/or Bounded Table}
\usage{
dbCreatePartBoundTableEM(
  conn,
  name,
  temporary = FALSE,
  if.not.exists = FALSE,
  like.name = character(),
  like.name.defaults = FALSE,
  like.name.constraints = FALSE,
  fields = character(),
  part.by = character(),
  part.bound = character(),
  part.key.def = character(),
  display = TRUE,
  exec = TRUE
)
}
\arguments{
\item{conn}{A PostgreSQL database connection.}

\item{name}{Name of the table. Escaped with.}

\item{temporary}{If `TRUE`, will generate a temporary table statement.}

\item{if.not.exists}{Logical. Default is FALSE. If TRUE, add the " IF NOT EXISTS " clause.}

\item{like.name}{Create a table like this one. If this has a name, then all other parameters are ignored EXCEPT "like.name.defaults" and "like.name.constraints".}

\item{like.name.defaults}{Logical.  Default is FALSE. This is an option only when "like.name" has a value.}

\item{like.name.constraints}{Logical. Default is FALSE. This is an option only when "like.name" has a value.
[DBI::dbQuoteIdentifier()].}

\item{fields}{Either a character vector or a data frame.

  A named character vector: Names are column names, values are types.
  Names are escaped with [DBI::dbQuoteIdentifier()].
  Field types are unescaped.

  A data frame: field types are generated using
  [DBI::dbDataType()].}

\item{part.by}{String. `PARTITION OF parent_table`}

\item{part.bound}{String. `[ ({ column_name [ WITH OPTIONS ] [ column_constraint [ ... ] ] | table_constraint } [, ... ] ) ] { FOR VALUES partition_bound_spec | DEFAULT }`.}

\item{part.key.def}{String. `[ PARTITION BY { RANGE | LIST | HASH } ( { column_name | ( expression ) } [ COLLATE collation ] [ opclass ] [, ... ] ) ]`.}

\item{display}{Logical. Whether to display the query (defaults to \code{TRUE}).}

\item{exec}{Logical. Whether to execute the query (defaults to \code{TRUE}).}
}
\description{
Exposes an interface to simple PostgreSQL
`CREATE TABLE . . . PARTITION BY . . . PARTITION OF . . . FOR VALUES . . . ` commands.
}
\details{
This code is partially inspired by R CRAN package DBI S4 methods sqlCreateTable and dbCreateTable.

NOTE: In PostgreSQL, one can not convert a table to a partitioned table and vice-versa.
}
\examples{
\dontrun{
conn <- DBI::dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="postgres", dbname="postgres")
dbCreatePartBoundTableEM(conn, "mtcars", mtcars, part.key.def = "LIST(CAST(gear AS INTEGER))")
}
}
