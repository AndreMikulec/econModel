% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions.R
\name{runRanks}
\alias{runRanks}
\alias{RNKS}
\title{rolling ranks using TTR::runPercentRank}
\usage{
runRanks(x, window = 10, ranks = 4, cumulative = F, exact.multiplier = 0.5)

RNKS(x, window = 10, ranks = 4, cumulative = F, exact.multiplier = 0.5)
}
\arguments{
\item{x}{xts object}

\item{window}{10(default) lag to determine the ranks.
If cumulative=TRUE, the number of observations to use
before the first result is returned. Not tested. So beware.
Must be between 1 and nrow(x), inclusive}

\item{ranks}{4(default) number of ranks. A lower value
means a lower rank number.}

\item{cumulative}{FALSE(default) use from-inception calculation?
Not tested. So beware.}

\item{exact.multiplier}{The weight applied to identical values
in the window. Must be between 0 and 1, inclusive.
See ? TTR::runPercentRank}
}
\value{
xts object
}
\description{
This is a wrapper around TTR runPercentRank.
TTR runPercentRank gives skewed values
(but with the value are in the correct order).
This function uses that "proper ordering" and makes
usable running ranks.
}
\examples{
\dontrun{

# runRanks(rolling ranks using TTR::runPercentRank) examples

runRanks(xts(c(3, 1, 2, 3), zoo::as.Date(0:3)), window = 4)

1970-01-01          NA
1970-01-02          NA
1970-01-03          NA
1970-01-04           3

runRanks(xts(c(3, 1, 2, 3), zoo::as.Date(0:3)), window = 4)

runRanks(xts(c(3, 1, 2, 3), zoo::as.Date(0:3)), window = 3, ranks = 3)

runRanks(xts(c(3, 1, 2, 3), zoo::as.Date(0:3)), window = 4, ranks = 2)

runRanks(xts(c(3, 1, 2, 3), zoo::as.Date(0:3)), window = 4, cumulative = TRUE)
}
}
\references{
\cite{last Fortran version of percentRank.f (but the newer C version has a fix)
\url{https://github.com/joshuaulrich/TTR/blob/9b30395f7604c37ea12a865961d81666bc167616/src/percentRank.f}
}
}
