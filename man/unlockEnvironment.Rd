% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/econModelSupport.R
\name{unlockEnvironment}
\alias{unlockEnvironment}
\alias{lsNamespaceInfo}
\alias{AllInfoNS}
\alias{forceAssignInNamespace}
\title{Unlock an R Package Enviroment and Assign an Object to the R Package Environment}
\usage{
unlockEnvironment(env)

lsNamespaceInfo(ns, ...)

AllInfoNS(ns)

forceAssignInNamespace(x, value, namespace)
}
\arguments{
\item{env}{Environment. Default none. Required.}

\item{ns}{String. Default none. Required. Name of a namspace}

\item{...}{dots.  Passed to ls}

\item{x}{String. Required. Default none. Name of the symbol/function}

\item{value}{R Object. Default none. Required. New value of the parameter x symbol/function}

\item{namespace}{String. Default none. Required. Name of the namespace to assign parameter x into.}
}
\value{
Of unlockEnvironment, Logical.  TRUE if this package environment has been successfully unlocked. FALSE otherwise.

Of lsNamespaceInfo, return a character vector of objects in a namespace

Of AllInfoNS, return lists and sublists of information about the namespace

Of forceAssignInNamespace, silently assign object x (from parameter x) intoto the namespace non-exported objects collection
}
\description{
Of unlockEnvironment, unlock a non-base package environment.  Note: R package base is unlocked (by design)

Of lsNamespaceInfo, from the name of a namespace, return a character vector of all objects

Of AllInfoNS, from the name of a namespace, return information

Of forceAssignInNamespace, force the assignment of a new item into a namespace.
Adapted from Rcpp. Based on the original function forceAssignMyNamespace by Willem Ligtenberg.
}
\examples{
\dontrun{
#
# something not-on-the-search() path
#

# also loads the environment (if not already loaded)
unlockEnvironment("stringi")
Error in unlockEnvironment("stats") :
  Cannot convert object to an environment: [type=character; target=ENVSXP].

unlockEnvironment(asNamespace("stringi"))
[1] TRUE

forceAssignInNamespace("prnt", function(x) {print(x)}, namespace = "stringi")

stringi::prnt
Error: 'prnt' is not an exported object from 'namespace:stringi'

stringi::prnt("GoThere")
Error: 'prnt' is not an exported object from 'namespace:stringi'

# not exported
stringi:::prnt("GoThere")
[1] "GoThere"

stringi:::prnt
function(x) {print(x)}

# promote that not-on-search-path package function to be exported
assign("prnt","prnt", envir = AllInfoNS("stringi")$exports)
stringi::prnt("GoThere")
[1] "GoThere"

#
# something on the search() path
#

seq_along(search())[search() \%in\% "package:stats"]
[1] 2

environmentIsLocked(as.environment(2)) # package:stats
[1] TRUE

is.environment(as.environment(2))
[1] TRUE

unlockEnvironment(as.environment(2))
[1] TRUE

environmentIsLocked(as.environment(2))
[1] FALSE

assign("prnt", function(x) {print(x)}, pos = 2)
stats::prnt("GoHere")
Error: 'prnt' is not an exported object from 'namespace:stats'

stats:::prnt("GoHere")
Error in get(name, envir = asNamespace(pkg), inherits = FALSE) :
  object 'prnt' not found

# promote that search path package function to be exported
assign("prnt","prnt", envir = AllInfoNS("stats")$exports)
stats::prnt
function(x) {print(x)}

stats::prnt("GoHere")
[1] "GoHere"
}
\dontrun{
library(RSQLite)

unlockEnvironment(asNamespace("RSQLite"))
[1] TRUE

forceAssignInNamespace("prnt", function(x) {
  print(x)
}, namespace = "RSQLite")

RSQLite::prnt("HelloEveryWhere")
Error: 'prnt' is not an exported object from 'namespace:RSQLite'

RSQLite:::prnt("HelloEveryWhere")
[1] "HelloEveryWhere"
}
}
\references{
\cite{unlockEnvironment function
\url{https://github.com/openanalytics/Rango/blob/adc99e077b71c8c6826cabb7ff1266050898718a/Rango/src/unlockEnvironment.cpp}
}

\cite{envir.c in the R 2.15.1 source (still in R 3.3.1)
\url{https://github.com/SurajGupta/r-source/blob/a28e609e72ed7c47f6ddfbb86c85279a0750f0b7/src/main/envir.c}
}

\cite{forceAssignMyNamespace by Willem Ligtenberg
\url{https://github.com/openanalytics/Rango/blob/adc99e077b71c8c6826cabb7ff1266050898718a/Rango/R/utils.R}
}
}
\author{
Willem Ligtenberg is the author of unlockEnvironment

Andre Mikulec is the author of lsNamespaceInfo

Andre Mikulec is the author of AllInfoNS

Willem Ligtenberg is the author of forceAssignInNamespace/forceAssignMyNamespace
}
